@using backup_website.Models.TableSansiriUrl
@model List<Result>

@{
    ViewData["Title"] = "Download Links";
    ViewData["UseDataTable"] = true;
}

<div class="table-overflow-x-scroll">
    <table id="datatable"
        class="table table-striped table-bordered dt-responsive nowrap default-datatable-responsive overflow-x-scroll">
        <thead>
            <tr>
                <th>ID</th>
                <th>Download Link</th>
                <th>Thank You Link</th>
                <th>Category</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.url_id</td>
                    <td>@item.url</td>
                    <td>@item.url_thankyou</td>
                    <td>@item.category_name</td>
                    <td>
                        <span class="d-flex justify-content-lg-center justify-content-start">
                            <input class="form-check-input switch-status m-0" type="checkbox" id="switch_@item.url_id"
                                data-url-id="@item.url_id" switch="none" @(item.is_active == true ? "checked" : "")>
                            <label class="form-label m-0" for="switch_@item.url_id" data-on-label="On"
                                data-off-label="Off"></label>
                        </span>
                    </td>
                    <td class="text-center">
                        <button type="button" class="btn btn-primary waves-effect waves-light btn-sm edit-btn"
                            data-url-id="@item.url_id" data-url="@item.url" data-thankyou-url="@item.url_thankyou"
                            data-category-id="@item.id_category_url">
                            Edit
                        </button>
                        <button type="button" class="btn btn-danger waves-effect waves-light btn-sm delete-btn"
                            data-url-id="@item.url_id">Delete</button>
                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>

<!-- ‚úÖ Modal ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Download Link</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <input type="hidden" id="editUrlId">

                    <div class="mb-3">
                        <label for="editUrl" class="form-label">Download URL</label>
                        <input type="text" class="form-control" id="editUrl" required>
                    </div>

                    <div class="mb-3">
                        <label for="editThankYouUrl" class="form-label">Thank You URL</label>
                        <input type="text" class="form-control" id="editThankYouUrl" required>
                    </div>

                    <div class="mb-3">
                        <label for="editCategory" class="form-label">Category</label>
                        <select class="form-select" id="editCategory">
                            <option value="">Loading categories...</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveEditBtn">Save changes</button>
            </div>
        </div>
    </div>
</div>


<partial name="partials/_DeleteConfirmModal" />


@section Scripts {
    <script src="~/js/downloadLinks.js"></script>
    <script>
        $(document).ready(function () {
            // ‚úÖ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Edit ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ç‡πâ‡∏≤ Modal
            $(document).on('click', '.edit-btn', function () {
                var urlId = $(this).data('url-id');
                var url = $(this).data('url');
                var thankYouUrl = $(this).data('thankyou-url');
                var categoryId = $(this).data('category-id');

                $('#editUrlId').val(urlId);
                $('#editUrl').val(url);
                $('#editThankYouUrl').val(thankYouUrl);

                // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î Categories ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡πà‡∏≤ Default
                loadCategories(function () {
                    $('#editCategory').val(categoryId);
                });

                $('#editModal').modal('show');
            });

            // ‚úÖ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Save ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            $('#saveEditBtn').on('click', function () {
                var requestData = {
                    url_id: parseInt($('#editUrlId').val()),
                    url: $('#editUrl').val(),
                    url_thankyou: $('#editThankYouUrl').val(),
                    id_category_url: parseInt($('#editCategory').val()),
                    is_active: true,
                    is_delete: false
                };

                console.log("üìå Debug - ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ API:", requestData); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤

                $.ajax({
                    url: '/BackupWebsite/UpdateUrl',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(requestData),
                    success: function (response) {
                        if (response.success) {
                            toastr.success("Updated successfully!");
                            $('#editModal').modal('hide');
                            location.reload();
                        } else {
                            toastr.error("Update failed: " + response.error);
                        }
                    },
                    error: function (xhr) {
                        console.log("‚ùå Debug - API Error:", xhr.responseText);
                        toastr.error("Error updating data.");
                    }
                });
            });

        });

        // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î Categories
        function loadCategories(callback) {
            $.ajax({
                url: '/BackupWebsite/GetCategories',
                type: 'GET',
                success: function (response) {
                    if (response.success) {
                        var categorySelect = $('#editCategory');
                        categorySelect.empty();
                        categorySelect.append('<option value="">Select Category</option>');

                        response.data.forEach(category => {
                            categorySelect.append(`<option value="${category.id_category_url}">${category.name}</option>`);
                        });

                        if (callback) callback(); // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å callback ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
                    }
                },
                error: function () {
                    toastr.error("Failed to load categories.");
                }
            });
        }

    </script>
}
